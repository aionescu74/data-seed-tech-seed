CREATE TABLE IF NOT EXISTS `dev_area` (
  `dev_area` varchar(150) COLLATE utf8mb4_unicode_ci NOT NULL,
  PRIMARY KEY (`dev_area`)
) ENGINE=InnoDB DEFAULT CHARSET=utf8mb4 COLLATE=utf8mb4_unicode_ci;

INSERT INTO `dev_area` (`dev_area`) VALUES
('API Network'),
('NLP');

CREATE TABLE IF NOT EXISTS `dev_help` (
  `id` int NOT NULL AUTO_INCREMENT,
  `lang` varchar(30) COLLATE utf8mb4_unicode_ci NOT NULL,
  `dev_area` varchar(150) COLLATE utf8mb4_unicode_ci NOT NULL,
  `problem` varchar(3000) COLLATE utf8mb4_unicode_ci NOT NULL,
  `solution` mediumtext COLLATE utf8mb4_unicode_ci NOT NULL,
  `documentation` varchar(3000) COLLATE utf8mb4_unicode_ci DEFAULT NULL,
  `link` varchar(1500) COLLATE utf8mb4_unicode_ci DEFAULT NULL,
  PRIMARY KEY (`id`),
  KEY `lang` (`lang`),
  KEY `dev_area` (`dev_area`)
) ENGINE=InnoDB AUTO_INCREMENT=8 DEFAULT CHARSET=utf8mb4 COLLATE=utf8mb4_unicode_ci COMMENT='Easy access to the most used routines';

INSERT INTO `dev_help` (`id`, `lang`, `dev_area`, `problem`, `solution`, `documentation`, `link`) VALUES
(1, 'python', 'API Network', 'Select din entitate', 'import requests\r\n\r\n# GET from SOURCE:\r\nSRC_URL = \"http://localhost/pariuri/utile/api/\"\r\n#SRC_URL = \"https://in-theory.info/seed/api/?tabel=bvb_companii\"\r\nHEADERS = {\r\n    \"Content-type\":\"application/json\", \r\n    \"Accept\":\"application/json\"\r\n}\r\n\r\nAUTH=()\r\n#AUTH=(\'admin\', \'B10zbx1c.\')\r\n\r\nquery = {\'tabel\': \'companii\'}\r\n#response = requests.get(SRC_URL, params=query, auth=())\r\nresponse = requests.get(url=SRC_URL, params=query, headers=HEADERS, auth=AUTH)\r\n\r\n\r\n#response.status_code\r\n#response.encoding\r\n#print(response.url)\r\nprint(response.text)', '# REZULTATUL ARE FORMA:\r\n#{\r\n#	\"records\": [\r\n#		{\r\n#			\"cod\": \"2P\",\r\n#			\"companie\": \"2performant Network\"\r\n#		},\r\n#		{\r\n#			\"cod\": \"ALU\",\r\n#			\"companie\": \"Alumil Rom Industry\"\r\n#		}\r\n#	]\r\n#}', 'http://localhost:8888/notebooks/PY/AI/antrenare%20din%20baza%20de%20date.ipynb'),
(2, 'python', 'NLP', 'Clasificarea unui text cu spacy', 'import spacy\r\nnlp = spacy.load(\"output\\model-last\")\r\n\r\ntext = \"I absolutely loved this movie! I absolutely love fried chicken! It is really good!\"\r\n\r\ndoc = nlp(text)\r\nprint(doc.cats)', '# Raspunsul va fi un JSON de genul:\r\n# {\'positive\': 0.5301775336265564, \'negative\': 0.4758976697921753}', 'http://localhost:8888/notebooks/PY/AI/NLP%20evalute%20text.ipynb'),
(3, 'python', 'API Network', 'Insert / update from JSON', 'import requests\r\n\r\nJSON = {\r\n    \"records\": [{\"cod\": \"2P\",\r\n    \"companie\": \"2performant Network\"}]\r\n}\r\nHEADERS = {\r\n    \"Content-type\":\"application/json\", \r\n    \"Accept\":\"application/json\"\r\n}\r\nURL = \"https://in-theory.info/seed/api/?tabel=bvb_companii\"\r\nAUTH=(\'admin\', \'B10zbx1c.\')\r\n\r\n# INSERT:\r\nresponse = requests.post(url=URL, json=JSON, headers=HEADERS, auth=AUTH)\r\n\r\n# UPDATE:\r\n# response = requests.put(url=URL, json=JSON, headers=HEADERS, auth=AUTH)\r\n\r\nprint(response.text)', 'Construirea JSON-ului e descrisa in alt dev_help -> vezi id: 4!', ''),
(4, 'python', 'API Network', 'Insert / update from BUILT JSON from GENERIC FOR', 'import json\r\nimport requests\r\n\r\ntemplate = \'{\"records\":[]}\'\r\nJSON = json.loads(template)\r\n\r\n# element SI elements SE VOR INLOCUI CU LISTA PE CARE O VREM IN BAZA DE DATE\r\n# IAR title, article SI sentiment SE VOR INLOCUI CU ATRIBUTELE DORITE:\r\nfor element in elements:\r\n    record = {}\r\n    record[\'title\'] = \'neg\'\r\n    record[\'article\'] = #DO SOMETHING WITH THE element\r\n    record[\'sentiment\'] = \'negative\'\r\n    ...\r\n\r\n    JSON[\"records\"].append(record)\r\n\r\n\r\n\r\nDEST_URL = \"http://localhost/pariuri/utile/api/?tabel=articles\"\r\n#DEST_URL = \"https://in-theory.info/seed/api/?tabel=articles\"\r\nHEADERS = {\r\n    \"Content-type\":\"application/json\", \r\n    \"Accept\":\"application/json\"\r\n}\r\nAUTH=()\r\n#AUTH=(\'admin\', \'B10zbx1c.\')\r\n\r\nresponse = requests.post(url=DEST_URL, json=JSON, headers=HEADERS, auth=AUTH)\r\nprint(response.text)', 'A fost folosit si in: http://localhost:8888/notebooks/PY/SEED/import%20articole%20din%20folder.ipynb', 'http://localhost:8888/notebooks/PY/AI/job_articole.ipynb'),
(5, 'python', 'API Network', 'ESSENTIAL: Insert / update from a SRC_URL to a DEST_URL', 'import requests\r\nimport json\r\n\r\n# GET from SOURCE:\r\nSRC_URL = \"http://localhost/pariuri/utile/api/\"\r\n#SRC_URL = \"https://in-theory.info/seed/api/?tabel=bvb_companii\"\r\nHEADERS = {\r\n    \"Content-type\":\"application/json\", \r\n    \"Accept\":\"application/json\"\r\n}\r\n\r\nAUTH=()\r\n#AUTH=(\'admin\', \'B10zbx1c.\')\r\n\r\nquery = {\'tabel\': \'companii\'}\r\n#response = requests.get(SRC_URL, params=query, auth=())\r\nresponse = requests.get(url=SRC_URL, params=query, headers=HEADERS, auth=AUTH)\r\n\r\nprint(response.text)\r\n\r\n\r\n# extracting the LIST of records from response\r\nli = json.loads(response.text)\r\nli = li[\'records\']\r\n\r\n\r\n# building resulting JSON\r\ntemplate = \'{\"records\":[]}\'\r\nDEST_JSON = json.loads(template)\r\n\r\n\r\nfor src_record in li:\r\n    dest_record = {}\r\n    dest_record[\'cod\'] = src_record[\'cod\']\r\n    dest_record[\'companie\'] = src_record[\'companie\']\r\n    \r\n    DEST_JSON[\"records\"].append(dest_record)\r\n        \r\nDEST_JSON\r\n\r\n\r\n# POST/PUT to DESTINATION:\r\nDEST_URL = \"https://in-theory.info/seed/api/?tabel=bvb_companii\"\r\nHEADERS = {\r\n    \"Content-type\":\"application/json\", \r\n    \"Accept\":\"application/json\"\r\n}\r\n\r\nAUTH=(\'admin\', \'B10zbx1c.\')\r\n#AUTH=()\r\n\r\n# INSERT:\r\nresponse = requests.post(url=DEST_URL, json=DEST_JSON, headers=HEADERS, auth=AUTH)\r\n\r\n# UPDATE:\r\n#response = requests.put(url=DEST_URL, json=DEST_JSON, headers=HEADERS, auth=AUTH)\r\nprint(response.text)', '', 'http://localhost:8888/notebooks/PY/DEV_HELP/ESSENTIAL%20Insert%20-%20update%20from%20a%20SRC_URL%20to%20a%20DEST_URL.ipynb'),
(6, 'python', 'API Network', 'Build ARRAY from JSON', 'import requests\r\nimport json\r\n\r\napi_url = \"http://localhost/pariuri/utile/api/\"\r\nquery = {\'tabel\': \'companii\'}\r\nresponse = requests.get(api_url, params=query, auth=())\r\n\r\n#response.status_code\r\n#response.encoding\r\n#print(response.url)\r\nprint(response.text)\r\n\r\nli = json.loads(response.text)\r\nli = li[\'records\']\r\narr = []\r\n\r\nfor i in li:\r\n    arr.append(i[\'cod\'])\r\n    arr.append(i[\'companie\'])\r\n    \r\nprint(arr)', '', 'http://localhost:8888/notebooks/PY/AI/antrenare%20din%20baza%20de%20date.ipynb'),
(7, 'python', 'NLP', 'Import articole din folder', 'import os\r\nimport json\r\nimport requests\r\n\r\n#PATH = r\'C:\\Users\\aione\\PY\\AI\\data\\sentiment_analysis\\RO\\train\\pos\'\r\nPATH = r\'C:\\Users\\aione\\PY\\AI\\data\\sentiment_analysis\\RO\\train\\neg\'\r\n\r\n# CREATE JSON FROM SEED TEMPLATE\r\ntemplate = \'{\"records\":[]}\'\r\nJSON = json.loads(template)\r\n\r\n\r\n#####################################\r\n##   PLEASE                        ##\r\n##   UPDATE \'neg\' AND \'negative\'   ##\r\n##   TO     \'pos\' AND \'positive\'   ##\r\n##   OR viceversa                  ##\r\n#####################################\r\n\r\nfor path, dirs, files in os.walk(PATH):\r\n    for filename in files:\r\n        fullpath = os.path.join(path, filename)\r\n        #print(fullpath)\r\n        f = open(fullpath, \"r\", encoding=\"utf-8\")\r\n        continut = f.read()\r\n        #print(continut)\r\n        \r\n        record = {}\r\n        #record[\'title\'] = \'neg\'\r\n        record[\'article\'] = continut\r\n        ####################################\r\n        ###         SET SENTIMENT         ##\r\n        ####################################\r\n        record[\'sentiment\'] = \'negative\'\r\n        JSON[\"records\"].append(record)\r\n        \r\n        f.close()\r\n        \r\n#JSON\r\n\r\n## UPDATE DESTINATION TABLE:\r\nURL = \"http://localhost/pariuri/utile/api/?tabel=train_data\"\r\n#URL = \"https://in-theory.info/seed/api/?tabel=articles\"\r\nHEADERS = {\r\n    \"Content-type\":\"application/json\", \r\n    \"Accept\":\"application/json\"\r\n}\r\nAUTH=()\r\n#AUTH=(\'admin\', \'B10zbx1c.\')\r\n\r\n#response = requests.post(api_url, json=query, auth=(\'admin\', \'B10zbx1c.\'))\r\nresponse = requests.post(url=URL, json=JSON, headers=HEADERS, auth=AUTH)\r\nprint(response.text)', 'Scriptul face preluarea din structura de foldere in baza de date', 'http://localhost:8888/notebooks/PY/SEED/import%20articole%20din%20folder.ipynb');

CREATE TABLE IF NOT EXISTS `dev_lang` (
  `lang` varchar(30) COLLATE utf8mb4_unicode_ci NOT NULL,
  PRIMARY KEY (`lang`)
) ENGINE=InnoDB DEFAULT CHARSET=utf8mb4 COLLATE=utf8mb4_unicode_ci COMMENT='Development languages';

INSERT INTO `dev_lang` (`lang`) VALUES
('php'),
('python');


ALTER TABLE `dev_help`
  ADD CONSTRAINT `dev_help_ibfk_1` FOREIGN KEY (`dev_area`) REFERENCES `dev_area` (`dev_area`) ON DELETE RESTRICT ON UPDATE CASCADE,
  ADD CONSTRAINT `dev_help_ibfk_2` FOREIGN KEY (`lang`) REFERENCES `dev_lang` (`lang`) ON DELETE RESTRICT ON UPDATE CASCADE;
COMMIT;
